tui.util.defineNamespace("fedoc.content", {});
fedoc.content["utils.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview This file contain utility methods for uploader.\n * @author NHN Ent. FE Development Team &lt;dl_javascript@nhnent.com>\n */\n\n'use strict';\n/**\n * @namespace utils\n */\nvar IS_SUPPORT_FILE_SYSTEM = !!(window.File &amp;&amp; window.FileReader &amp;&amp; window.FileList &amp;&amp; window.Blob),\n    IS_SUPPORT_FORM_DATA = !!(window.FormData || null);\n\n/**\n * Parse url\n * @param {string} url - url for parsing\n * @returns {Object} URL information\n */\nfunction parseURL(url) {\n    var a = document.createElement('a');\n    a.href = url;\n\n    return {\n        href: a.href,\n        host: a.host,\n        port: a.port,\n        hash: a.hash,\n        hostname: a.hostname,\n        pathname: a.pathname,\n        protocol: a.protocol,\n        search: a.search,\n        query: a.search.slice(1)\n    };\n}\n\n/**\n * Extract unit for file size\n * @param {number} bytes A usage of file\n * @returns {string} Size-string\n * @memberof utils\n */\nfunction getFileSizeWithUnit(bytes) {\n    var units = ['B', 'KB', 'MB', 'GB', 'TB'],\n        bytes = parseInt(bytes, 10),\n        exp = Math.log(bytes) / Math.log(1024) | 0,\n        result = (bytes / Math.pow(1024, exp)).toFixed(2);\n\n    return result + units[exp];\n}\n\n/**\n * Whether the browser supports FormData or not\n * @memberof utils\n * @returns {boolean} whether the browser supports FormData\n */\nfunction isSupportFormData() {\n    return IS_SUPPORT_FORM_DATA;\n}\n\n/**\n * Get item elements HTML\n * @param {Object} map - Properties for template\n * @param {string} html HTML template\n * @returns {string} HTML\n * @memberof utils\n */\nfunction template(map, html) {\n    html = html.replace(/\\{\\{([^\\}]+)\\}\\}/g, function (mstr, name) {\n        return map[name];\n    });\n    return html;\n}\n\n/**\n * Check whether the browser supports file api.\n * @returns {boolean} whether the browser supports FileAPI\n * @memberof utils\n */\nfunction isSupportFileSystem() {\n    return IS_SUPPORT_FILE_SYSTEM;\n}\n\n/**\n * Check whether the url is x-domain\n * @param {string} url - URL\n * @returns {boolean} Whether the url is x-domain\n * @memberof utils\n */\nfunction isCrossDomain(url) {\n    var here = parseURL(window.location.href),\n        target = parseURL(url);\n\n    return target.hostname !== here.hostname\n        || target.port !== here.port\n        || target.protocol !== here.protocol;\n}\n\nmodule.exports = {\n    getFileSizeWithUnit: getFileSizeWithUnit,\n    isSupportFileSystem: isSupportFileSystem,\n    isSupportFormData: isSupportFormData,\n    template: template,\n    isCrossDomain: isCrossDomain\n};\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"