tui.util.defineNamespace("fedoc.content", {});
fedoc.content["connector_ajax.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview This Connector make connection between FileManager and file server api at modern browser.&lt;br>\n *     This Connector use ajax.\n * @dependency ne-code-snippet 1.0.3, jquery1.8.3\n * @author NHN Ent. FE Development Team &lt;dl_javascript@nhnent.com>\n */\n'use strict';\n/**\n * The modules will be mixed in connector by type.\n * @namespace Connector.Ajax\n */\nvar Ajax = {/** @lends Connector.Ajax */\n    type: 'POST',\n\n    /**\n     * Request ajax by config to add files.\n     * @param {object} config The configuration for ajax request\n     *  @param {string} config.url Request url(upload url or remove url)\n     *  @param {function} config.success Callback function when request suceess.\n     *  @param {function} config.error Callback function when request faild.\n     * @param {Array} files Files\n     *  @memberof Connector.Ajax\n     */\n    addRequest: function(config, files) {\n        var uploader = this._uploader,\n            $form = uploader.inputView.$el,\n            callback = tui.util.bind(this.successPadding, this, config.success);\n\n        if (files) {\n            this.formData = new FormData();\n            tui.util.forEach(files, function(file) {\n                this.formData.append(uploader.fileField, file);\n            }, this);\n        } else {\n            this.formData = new FormData($form[0]);\n        }\n        $.ajax({\n            url: this._uploader.url.send,\n            type: this.type,\n            data: this.formData,\n            success: callback,\n            processData: false,\n            contentType: false,\n            error: config.error\n        });\n    },\n\n    /**\n     * Preprocessing callback before callback run.\n     * @param {function} callback Request Callback function\n     * @param {object} response Response from server\n     * @memberof Connector.Ajax\n     */\n    successPadding: function(callback, response) {\n        var json = JSON.parse(response),\n            result = {};\n\n        result.items = json.filelist;\n        callback(result);\n    },\n\n    /**\n     * Request ajax by config to remove file.\n     * @param {object} config Configuration for remove\n     * @memberof Connector.Ajax\n     */\n    removeRequest: function(config) {\n        var callback = tui.util.bind(this.removePadding, this, config.success);\n        $.ajax({\n            url: this._uploader.url.remove,\n            data: config.data,\n            success: callback,\n            error: config.error\n        });\n    },\n\n    /**\n     * Preprocessing response before callback run.\n     * @param {function} callback Request Callback function\n     * @param {object} response Response from server\n     * @memberof Connector.Ajax\n     */\n    removePadding: function(callback, response) {\n        var json = JSON.parse(response),\n            result = {};\n\n        result.action = 'remove';\n        result.name = decodeURIComponent(json.name);\n\n        callback(result);\n    }\n};\n\nmodule.exports = Ajax;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"