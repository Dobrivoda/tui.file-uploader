tui.util.defineNamespace("fedoc.content", {});
fedoc.content["view_drag.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview This file is about drag and drop file to send. Drag and drop is running via file api.\n * @author NHN Ent. FE Development Team &lt;dl_javascript@nhnent.com>\n */\n'use strict';\nvar consts = require('../consts');\nvar utils = require('../utils');\n\n/**\n * Makes drag and drop area, the dropped file is added via event drop event.\n * @class View.DragAndDrop\n */\nvar DragAndDrop = tui.util.defineClass(/** @lends View.DragAndDrop.prototype */{\n    /**\n     * initialize DragAndDrop\n     */\n    init: function(options, uploader) {\n        var html = options.template &amp;&amp; options.template.drag || consts.HTML.drag;\n        this._enableClass = options.drag &amp;&amp; options.drag.enableClass || consts.CONF.DRAG_DEFAULT_ENABLE_CLASS;\n        this._render(html, uploader);\n        this._addEvent();\n    },\n\n    /**\n     * Renders drag and drop area\n     * @param {string} html The html string to make darg zone\n     * @param {object} uploader The core instance of this component\n     * @private\n     */\n    _render: function(html, uploader) {\n        this.$el = $(html);\n        uploader.$el.append(this.$el);\n    },\n\n    /**\n     * Adds drag and drop event\n     * @private\n     */\n    _addEvent: function() {\n        this.$el.on('dragenter', tui.util.bind(this.onDragEnter, this));\n        this.$el.on('dragover', tui.util.bind(this.onDragOver, this));\n        this.$el.on('drop', tui.util.bind(this.onDrop, this));\n        this.$el.on('dragleave', tui.util.bind(this.onDragLeave, this));\n    },\n\n    /**\n     * Handles dragenter event\n     */\n    onDragEnter: function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this._enable();\n    },\n\n    /**\n     * Handles dragover event\n     */\n    onDragOver: function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    },\n\n    /**\n     * Handles dragleave event\n     */\n    onDragLeave: function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this._disable();\n    },\n\n    /**\n     * Handles drop event\n     */\n    onDrop: function(e) {\n        e.preventDefault();\n        this._disable();\n        this.fire('drop', {\n            files: e.originalEvent.dataTransfer.files\n        });\n        return false;\n    },\n\n    _enable: function() {\n        this.$el.addClass(this._enableClass);\n    },\n\n    _disable: function() {\n        this.$el.removeClass(this._enableClass);\n    }\n});\n\ntui.util.CustomEvents.mixin(DragAndDrop);\n\nmodule.exports = DragAndDrop;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"