tui.util.defineNamespace("fedoc.content", {});
fedoc.content["view_drag.js.html"] = "      <div id=\"main\" class=\"main\">\n\n\n\n    \n    <section>\n        <article>\n            <pre class=\"prettyprint source linenums\"><code>/**\n * @fileoverview This file is about drag and drop file to send. Drag and drop is running via file api.\n * @author NHN Ent. FE Development Team &lt;dl_javascript@nhnent.com>\n */\n\nvar statics = require('../statics');\nvar utils = require('../utils');\n\n/**\n * Makes drag and drop area, the dropped file is added via event drop event.\n * @class View.DragAndDrop\n */\nvar DragAndDrop = tui.util.defineClass(/** @lends View.DragAndDrop.prototype */{\n\t/**\n\t * initialize DragAndDrop\n\t */\n\tinit: function(options, uploader) {\n\t\tvar html = options.template &amp;&amp; options.template.drag || statics.HTML.drag;\n\t\tthis._enableClass = options.drag &amp;&amp; options.drag.enableClass || statics.CONF.DRAG_DEFAULT_ENABLE_CLASS;\n\t\tthis._render(html, uploader);\n\t\tthis._addEvent();\n\t},\n\n\t/**\n\t * Renders drag and drop area\n\t * @param {string} html The html string to make darg zone\n\t * @param {object} uploader The core instance of this component\n     * @private\n\t */\n\t_render: function(html, uploader) {\n\t\tthis.$el = $(html);\n\t\tuploader.$el.append(this.$el);\n\t},\n\n\t/**\n\t * Adds drag and drop event\n     * @private\n\t */\n\t_addEvent: function() {\n\t\tthis.$el.on('dragenter', tui.util.bind(this.onDragEnter, this));\n\t\tthis.$el.on('dragover', tui.util.bind(this.onDragOver, this));\n\t\tthis.$el.on('drop', tui.util.bind(this.onDrop, this));\n\t\tthis.$el.on('dragleave', tui.util.bind(this.onDragLeave, this));\n\t},\n\n\t/**\n\t * Handles dragenter event\n\t */\n\tonDragEnter: function(e) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tthis._enable();\n\t},\n\n\t/**\n\t * Handles dragover event\n\t */\n\tonDragOver: function(e) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t},\n\n\t/**\n\t * Handles dragleave event\n\t */\n\tonDragLeave: function(e) {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tthis._disable();\n\t},\n\n\t/**\n\t * Handles drop event\n\t */\n\tonDrop: function(e) {\n\t\te.preventDefault();\n\t\tthis._disable();\n\t\tthis.fire('drop', {\n\t\t\tfiles: e.originalEvent.dataTransfer.files\n\t\t});\n\t\treturn false;\n\t},\n\n\t_enable: function() {\n\t\tthis.$el.addClass(this._enableClass);\n\t},\n\n\t_disable: function() {\n\t\tthis.$el.removeClass(this._enableClass);\n\t}\n});\n\ntui.util.CustomEvents.mixin(DragAndDrop);\n\nmodule.exports = DragAndDrop;\n</code></pre>\n        </article>\n    </section>\n\n\n\n</div>\n\n"